name: llvm-builder
on: [push]

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      llvm_tag: 15.x
      install_dir: llvm-root
      cache_dir: .cache
    steps:
      - run: |
          curl -L https://raw.githubusercontent.com/apache/flink/master/tools/azure-pipelines/free_disk_space.sh | bash
      - run: |
          sudo apt update
          sudo apt install -y build-essential ninja-build ccache wget python3 python3-dev python3-pip
          sudo python3 -m pip install numpy pybind11
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
          sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-15 0
          sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-15 0
      - uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          key: ccache
          path: |
            ${{ env.cache_dir }}
            llvm-project
      - run: |
          [[ ! -e llvm-project ]] && git clone https://github.com/llvm/llvm-project.git
          cd llvm-project
          git pull --rebase
          git checkout release/${llvm_tag}
          git submodule update --init
      - name: Build
        run: |
          INSTALL_DIR=$PWD/$install_dir CACHE_DIR=$PWD/$cache_dir ./build.sh
          tar -czf llvm-${{ env.llvm_tag }}.tar.gz $install_dir
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: llvm
          path: llvm-${{ env.llvm_tag }}.tar.gz
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/heads/release')
        with:
          files: llvm-${{ env.llvm_tag }}.tar.gz

